Чат-бот Вконтакте «VKinder» 
Разработка программы-бота для взаимодействия с базами данных социальной сети. Бот предлагает различные варианты людей для знакомств в социальной сети Вконтакте в виде диалога с пользователем (поиск людей ведется по критериям: пол, возраст, город).
Для работы с чат ботом необходимо:
	установить Python 3.x и любую IDE 
	настроен компьютер для работы с БД PostgreSQL
	установить git и создать аккаунт на Github
	создать группу во вконтакте (инструкция https://github.com/netology-code/adpy-team-diplom/blob/main/group_settings.md) для получения токена группы, создать токен пользователя

В данном проекте использовались следующие библиотеки (представлены в файле (requirements.txt):
•	certifi==2021.10.8
•	charset-normalizer==2.0.12
•	greenlet==1.1.2
•	idna==3.3
•	psycopg2==2.9.3
•	requests==2.27.1
•	SQLAlchemy==1.4.36
•	urllib3==1.26.9
•	vk-api==11.9.8

Логика работы чат бота:
1.	с помощью модуля vk_api получаем доступ к данным о пользователе и кандидатах
2.	отбираем у подходящих кандидатов три самые популярные фотографии (с помощью метода sorting_likes)
3.	запускаем чат бот (модуль vk_bot.py)
4.	настраиваем возможность перехода к следующему человеку с помощью кнопки
5.	сохраняем данные о кандидатах в БД в избранные 
6.	выводим список избранных людей 

Подобная работа модулей:

1.	для поиска людей по критериям используется метод search_candidates в классе VkCandidate (пакет interaction_with_vk модуль Vk_candidates.py)
2.	для получения данных о человеке используются методы get_user_sex, get_user_city, get_user_age в классе VkUser (пакет interaction_with_vk  модуль Vk_users.py)
3.	для нахождения фото людей используется метод get_photo (пакет interaction_with_vk модуль Vk_candidates.py)
ВАЖНО! Для получения фото используется токен пользователя
4.	для отсортировки полученных фото по лайкам используется метод sorting_likes (пакет interaction_with_vk модуль Vk_candidates.py)
5.	в модуле settings.py указываются входные данные, а именно токен группы, токен пользователя, версия VK
6.	подключение к базе данных реализовано в пакете models в модуле base.py 
7.	создание пользователя бота ВК реализуется методом Users(Base) (пакет models в модуле users.py
8.	метод exists (класс CandidateDB) пакета db_handler модуля candidate_handler.py – проверяет наличие кадидата в БД
9.	метод add_candidate (класс CandidateDB) пакета db_handler модуля candidate_handler.py – добавляет кандидата в черный список
10.	метод get_id (класс CandidateDB) пакета db_handler модуля candidate_handler.py – возвращает id кандидата 
11.	метод exists (класса PhotoDB) пакета db_handler модуля photo_handler.py – проверяет наличие фотографий в БД
12.	метод add_photo (класса PhotoDB) пакета db_handler модуля photo_handler.py – добавляет фото в БД
13.	метод exists (класса UserDb) пакета db_handler модуля user_handler.py – проверяет наличие пользователя в ДБ. Если пользователь есть в БД, проверяет актуальность данных. Если один из показателей устарел, происходит обновление данных.
14.	метод add_user (класса UserDb) пакета db_handler модуля user_handler.py – добавляет пользователя в БД
15.	метод update_user (класса UserDb) пакета db_handler модуля user_handler.py – обновляет возраст и город в БД
16.	метод relation (класса UserDb) пакета db_handler модуля user_handler.py – добавляет связь между пользователем и кандидатом 
17.	метод candidates_list (класса UserDb) пакета db_handler модуля user_handler.py – формирование листа кандидатов
18.	в модуле .gitignore представлены файлы, которые программа будет игнорировать 
19.	в модуле BotVk оторажена логика работы бота с выводимыми сообщениями и настроенными кнопками
